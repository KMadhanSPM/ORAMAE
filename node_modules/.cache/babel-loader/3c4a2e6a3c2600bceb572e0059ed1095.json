{"ast":null,"code":"import { applyMiddleware, createStore, combineReducers, compose } from \"redux\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport promise from \"redux-promise-middleware\";\nimport * as reducers from './ducks';\nexport default function getStore() {\n  const appReducer = combineReducers(reducers);\n  const middlewares = [thunk, promise];\n\n  const rootReducer = (state, action) => {\n    return appReducer(state, action);\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    middlewares.push(logger);\n    return createStore(rootReducer, composeEnhancers(applyMiddleware(...middlewares)));\n  }\n\n  return createStore(rootReducer, applyMiddleware(...middlewares)); // const middleware = applyMiddleware(promise, thunk, createLogger())\n}","map":{"version":3,"sources":["/home/madhan/Desktop/projects/ormae/src/redux/store.js"],"names":["applyMiddleware","createStore","combineReducers","compose","logger","thunk","promise","reducers","getStore","appReducer","middlewares","rootReducer","state","action","process","env","NODE_ENV","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","push"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAO,KAAKC,QAAZ,MAA0B,SAA1B;AAEA,eAAe,SAASC,QAAT,GAAoB;AAEnC,QAAMC,UAAU,GAAGP,eAAe,CAACK,QAAD,CAAlC;AACA,QAAMG,WAAW,GAAG,CAACL,KAAD,EAAQC,OAAR,CAApB;;AAEA,QAAMK,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,WAAOJ,UAAU,CAACG,KAAD,EAAQC,MAAR,CAAjB;AACH,GAFD;;AAIA,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAC1C,UAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+ChB,OAAxE;AACAO,IAAAA,WAAW,CAACU,IAAZ,CAAiBhB,MAAjB;AACA,WAAOH,WAAW,CACfU,WADe,EAEfM,gBAAgB,CAACjB,eAAe,CAAC,GAAGU,WAAJ,CAAhB,CAFD,CAAlB;AAIA;;AAEA,SAAOT,WAAW,CACfU,WADe,EAEfX,eAAe,CAAC,GAAGU,WAAJ,CAFA,CAAlB,CAlBkC,CAuBnC;AACC","sourcesContent":["import { applyMiddleware, createStore, combineReducers, compose } from \"redux\"\nimport logger from \"redux-logger\"\nimport thunk from \"redux-thunk\"\nimport promise from \"redux-promise-middleware\"\nimport * as reducers from './ducks';\n\nexport default function getStore() {\n\nconst appReducer = combineReducers(reducers);\nconst middlewares = [thunk, promise];\n\nconst rootReducer = (state, action) => {\n    return appReducer(state, action);\n};\n\nif (process.env.NODE_ENV !== 'production') {\n\tconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\tmiddlewares.push(logger);\n\treturn createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(...middlewares))\n  );\n}\n\n return createStore(\n    rootReducer,\n    applyMiddleware(...middlewares)\n  );\n\n// const middleware = applyMiddleware(promise, thunk, createLogger())\n}\n"]},"metadata":{},"sourceType":"module"}